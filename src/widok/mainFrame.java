/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package widok;

import Algorytmy.FastConvexHull;
import Algorytmy.FunkcjePomocnicze;
import Algorytmy.SlowConvexHull;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Toolkit;
import java.util.LinkedList;
import klasy.Punkt;
import klasy.Zbior;

/**
 * Klasa tworząca JFrame podstawowego trybu działania aplikacji
 *
 * @author karol
 */
public class mainFrame extends javax.swing.JFrame {

    /**
     *
     * Creates new form mainFrame
     */
    Zbior S;
    Graphics g;

    Component[] a;
    Component[] b;

    FunkcjePomocnicze f = new FunkcjePomocnicze();

    ;

    public mainFrame() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSlider1 = new javax.swing.JSlider();
        jpSlowConvexHull = new javax.swing.JPanel();
        jpFastConvexHull = new javax.swing.JPanel();
        jbLosujPunkty = new javax.swing.JButton();
        jbStart = new javax.swing.JButton();
        jpLegenda = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jpSlowConvexHull.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "SlowConvexHull", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N
        jpSlowConvexHull.setPreferredSize(new java.awt.Dimension(325, 325));

        javax.swing.GroupLayout jpSlowConvexHullLayout = new javax.swing.GroupLayout(jpSlowConvexHull);
        jpSlowConvexHull.setLayout(jpSlowConvexHullLayout);
        jpSlowConvexHullLayout.setHorizontalGroup(
            jpSlowConvexHullLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 313, Short.MAX_VALUE)
        );
        jpSlowConvexHullLayout.setVerticalGroup(
            jpSlowConvexHullLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jpFastConvexHull.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "FastConvexHull", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 14))); // NOI18N
        jpFastConvexHull.setPreferredSize(new java.awt.Dimension(325, 325));

        javax.swing.GroupLayout jpFastConvexHullLayout = new javax.swing.GroupLayout(jpFastConvexHull);
        jpFastConvexHull.setLayout(jpFastConvexHullLayout);
        jpFastConvexHullLayout.setHorizontalGroup(
            jpFastConvexHullLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 313, Short.MAX_VALUE)
        );
        jpFastConvexHullLayout.setVerticalGroup(
            jpFastConvexHullLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jbLosujPunkty.setText("Losuj punkty");
        jbLosujPunkty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLosujPunktyActionPerformed(evt);
            }
        });

        jbStart.setText("START");
        jbStart.setEnabled(false);
        jbStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbStartActionPerformed(evt);
            }
        });

        jpLegenda.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED), "Legenda", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        javax.swing.GroupLayout jpLegendaLayout = new javax.swing.GroupLayout(jpLegenda);
        jpLegenda.setLayout(jpLegendaLayout);
        jpLegendaLayout.setHorizontalGroup(
            jpLegendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jpLegendaLayout.setVerticalGroup(
            jpLegendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jMenu1.setText("Menu");

        jMenuItem2.setText("Prezentacja algorytmu dla ogromnej ilości punktów");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jpSlowConvexHull, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jbLosujPunkty, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                    .addComponent(jbStart, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                    .addComponent(jpLegenda, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpFastConvexHull, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jpSlowConvexHull, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jpFastConvexHull, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jbLosujPunkty, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jpLegenda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jbStart, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
/**
     * Usuwa obecne okno i tworzymy okno Dodatkowego trybu
     */
    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        secondFrame sf = new secondFrame();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        sf.setLocation(dim.width / 2 - sf.getSize().width / 2, dim.height / 2 - sf.getSize().height / 2);
        sf.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    /**
     * Po kliknięciu tworzy zbiór losorych punktów, dodaje ich 
     * reprezentację graficzną oraz wywołuje  funkcje rysującą legendę.
     */
    private void jbLosujPunktyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLosujPunktyActionPerformed
        f.RysujLegende(jpLegenda);
        ValidacjaPunktow();

        S = new Zbior(10);

        a = f.Stworz_ReprezentacjePunktow(S);
        b = f.Stworz_ReprezentacjePunktow(S);

        WyswietlPunkty();

        jbStart.setEnabled(true);
    }//GEN-LAST:event_jbLosujPunktyActionPerformed
    /**
     * Uruchamia działanie obu algorytmów zaczynając od FastConvexHull 
     * a następnie SlowConvexHull pokazując krok po kroku 
     * działanie kazdego z nich, a następnie rysując reprezentacje krawędzi otoczki.
     */
    private void jbStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbStartActionPerformed
        // TODO add your handling code here:
        LinkedList<Punkt> _Lslow;
        LinkedList<Punkt> _Lfast;
        SlowConvexHull slow;
        FastConvexHull fast;

        fast = new FastConvexHull(jpFastConvexHull);
        _Lfast = fast.AlgorytmWydajnyCH(S);
        f.Rysuj_KrawedzieOtoczki(_Lfast, Color.MAGENTA, jpFastConvexHull);

        slow = new SlowConvexHull(jpSlowConvexHull);
        _Lslow = slow.AlgorytmSCH(S);
        f.Rysuj_KrawedzieOtoczki(_Lslow, Color.MAGENTA, jpSlowConvexHull);


    }//GEN-LAST:event_jbStartActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new mainFrame().setVisible(true);
        });
    }
    /**
     * Dodaje utworzone reprezentacje punktów 
     */
    public void WyswietlPunkty() {
        for (int i = 0; i < S.getRozmiar(); i++) {
            jpSlowConvexHull.add(a[i]);
            jpFastConvexHull.add(b[i]);
        }
        jpFastConvexHull.repaint();
        jpSlowConvexHull.repaint();
    }
    /**
     * Sprawdza czy został stworzony nowy zbior reprezentacji punktów, 
     * jeżeli tak usuwa poprzednią wersję reprezentacji.
     */
    public void ValidacjaPunktow() {
        if (a != null) {
            for (int i = 0; i < S.getRozmiar(); i++) {
                jpSlowConvexHull.remove(a[i]);
                jpFastConvexHull.remove(b[i]);
            }
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JButton jbLosujPunkty;
    private javax.swing.JButton jbStart;
    private javax.swing.JPanel jpFastConvexHull;
    private javax.swing.JPanel jpLegenda;
    private javax.swing.JPanel jpSlowConvexHull;
    // End of variables declaration//GEN-END:variables
}
